package test_0717;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

public class asdf {

  public static void main(String[] args) {
    
    List<String> list = new ArrayList<>();
    list.addAll(Arrays.asList("콩나물", "파프리카", "오이", "토마토", "파", "양파"));
    
    
    System.out.println("-1-");
    // stream : 리스트의 각 요소를 스트림으로 변환(컬렉션의 요소를 하나씩 처리할 수 있는 스트림을 생성)
    // filter : 조건에 맞는 요소를 걸러낸다(조건에 맞는 요소로 구성된 새로운 스트림을 반환)
    // contains : "파" 글자가 포함되어 있는지 확인(Boolean 타입으로 반환)
    // forEach : 필터링된 각 요소에 대해 주어진 동작을 수행(스트림의 각 요소에 대해 지정된 작업을 수행)
    list.stream()
    .filter(x -> x.contains("파"))
    .forEach(x -> System.out.println(x + " "));
    
    System.out.println();
    
    // collect : 
    System.out.println("-2-");
    // Map<Boolean, List<String>> 형태로 반환, true 키에는 "파"가 포함된 요소들의 리스트, false 키에는 "파"가 포함되지 않은 요소들의 리스트를 반환
    // 반환된 Map<Boolean, List<String>> 에서 true인 것만 뽑는다 -> List<String> 이 반환
    // 
    list.stream()
    .collect(Collectors.groupingBy(x -> x.contains("파")))
    .get(true)
    .stream()
    .sorted(Comparator.naturalOrder())
    .forEach(x -> System.out.println(x + " "));
    
    System.out.println();
    
    System.out.println("-3-");
    list.stream()
    .collect(Collectors.groupingBy(x -> x.contains("파")))
    .get(false)
    .stream()
    .sorted(Comparator.naturalOrder())
    .limit(1)
    .forEach(x -> System.out.println(x + " "));
    
    System.out.println();
    System.out.println("-4-");
    list.stream().forEach(x -> System.out.println(x));
    
    System.out.println();
    System.out.println("-5-");
    list.stream().filter(x -> x.contains("파")).forEach(x -> System.out.println(x));

  }

}
